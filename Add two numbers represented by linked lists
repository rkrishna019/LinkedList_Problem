class Solution{
    //Function to add two numbers represented by linked list.
    static Node addTwoLists(Node first, Node second){
        
       Node ans =  addList(first,second);
       return reverse(ans); 
    }
    static Node addList(Node first, Node second)
    {
        
        long num1 = 0;
        long num2 = 0;
        Node curr = first;
        Node temp = second;
        while(curr !=null){
            
            num1 = num1*10 + curr.data;
            curr = curr.next;
            
        }
        while(temp !=null){
            
            num2 = num2*10 + temp.data;
            temp = temp.next;
            
        }
        
        long sum = num1+num2;
        Node head = new Node(-1);
         Node curr1 = head;
        while(sum > 0){
            long n = sum%10;
            curr1.next = new Node((int)n);
            curr1 = curr1.next;
            sum = sum/10;
        }
        return head.next;
    }
    static Node reverse(Node head){
        
        if(head == null) return null;
        if(head.next == null) return head;
        
        Node prev = null; 
        Node curr = head;
        while(curr != null){
            Node next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
